from configs.centerpoint.hv01_second_secfpn import VOXEL_SIZE, POINT_CLOUD_RANGE

_base_ = ['./cbgs_dv01_second_secfpn_dcn.py']

model = dict(
    pts_middle_encoder=dict(out_indices=[1, 3]),
    pts_roi_head=dict(
        type='PVRCNNRoiHead',
        pts_encoder=dict(
            type='VoxelSetAbstraction',
            num_keypoints=4096,
            fused_out_channel=128,
            voxel_size=VOXEL_SIZE,
            point_cloud_range=POINT_CLOUD_RANGE,
            bev_feat_channel=512,
            bev_scale_factor=8,
            sample_cfg=dict(
                method='SPC',
                num_sectors=6,
                sample_radius_with_roi=1.6),
            rawpoints_sa_cfgs=dict(
                type='VectorPoolAggregationModuleMSG',
                local_aggregation_type='local_interpolation',
                num_reduced_channels=1,
                num_channels_of_local_aggregation=32,
                msg_post_mlps=[32],
                radius_of_neighbor_with_roi=2.4,
                group_cfg=[
                    dict(num_local_voxel=[2, 2, 2],
                        max_neighbor_distance=0.2,
                        neighbor_nsample=-1,
                        post_mlps=[32, 32]),
                    dict(num_local_voxel=[3, 3, 3],
                        max_neighbor_distance=0.4,
                        neighbor_nsample=-1,
                        post_mlps=[32, 32])]),
            voxel_sa_cfgs_list=[
                dict(type='VectorPoolAggregationModuleMSG',
                    downsample_factor=4,
                    local_aggregation_type='local_interpolation',
                    num_reduced_channels=32,
                    num_channels_of_local_aggregation=32,
                    msg_post_mlps=[128],
                    radius_of_neighbor_with_roi=4.0,
                    group_cfg=[
                        dict(num_local_voxel=[3, 3, 3],
                            max_neighbor_distance=1.2,
                            neighbor_nsample=-1,
                            post_mlps=[64, 64]),
                        dict(num_local_voxel=[3, 3, 3],
                            max_neighbor_distance=2.4,
                            neighbor_nsample=-1,
                            post_mlps=[64, 64])]),
                dict(type='VectorPoolAggregationModuleMSG',
                    downsample_factor=8,
                    local_aggregation_type='local_interpolation',
                    num_reduced_channels=32,
                    num_channels_of_local_aggregation=32,
                    msg_post_mlps=[128],
                    radius_of_neighbor_with_roi=6.4,
                    group_cfg=[
                        dict(num_local_voxel=[3, 3, 3],
                            max_neighbor_distance=2.4,
                            neighbor_nsample=-1,
                            post_mlps=[64, 64]),
                        dict(num_local_voxel=[3, 3, 3],
                            max_neighbor_distance=4.8,
                            neighbor_nsample=-1,
                            post_mlps=[64, 64])])]),
        semantic_head=dict(
            type='ForegroundSegmentationHead',
            in_channels=800,
            extra_width=0.1,
            loss_seg=dict(
                type='mmdet.FocalLoss',
                use_sigmoid=True,
                reduction='sum',
                gamma=2.0,
                alpha=0.25,
                activated=True,
                loss_weight=1.0)),
        bbox_roi_extractor=dict(
            type='Batch3DRoIGridExtractor',
            grid_size=6,
            roi_layer=dict(
                type='VectorPoolAggregationModuleMSG',
                local_aggregation_type='voxel_random_choice',
                num_reduced_channels=32,
                num_channels_of_local_aggregation=32,
                msg_post_mlps=[128],
                group_cfg=[
                    dict(num_local_voxel=[3, 3, 3],
                         max_neighbor_distance=0.8,
                         neighbor_nsample=32,
                         post_mlps=[64, 64]),
                    dict(num_local_voxel=[3, 3, 3],
                         max_neighbor_distance=1.6,
                         neighbor_nsample=32,
                         post_mlps=[64, 64])])
        ),
        bbox_head=dict(
            type='PVRCNNBBoxHead',
            in_channels=128,
            grid_size=6,
            num_classes=3,
            class_agnostic=True,
            shared_fc_channels=(256, 256),
            reg_channels=(256, 256),
            cls_channels=(256, 256),
            dropout_ratio=0.3,
            with_corner_loss=True,
            bbox_coder=dict(type='DeltaXYZWLHRBBoxCoder'),
            loss_bbox=dict(
                type='mmdet.SmoothL1Loss',
                beta=1.0 / 9.0,
                reduction='sum',
                loss_weight=1.0),
            loss_cls=dict(
                type='mmdet.CrossEntropyLoss',
                use_sigmoid=True,
                reduction='sum',
                loss_weight=1.0))),
    train_cfg=dict(
        rcnn=dict(
            assigner=dict(
                type='Max3DIoUAssigner',
                iou_calculator=dict(type='BboxOverlaps3D', coordinate='lidar'),
                pos_iou_thr=0.55,
                neg_iou_thr=0.55,
                min_pos_iou=0.55,
                ignore_iof_thr=-1),
            sampler=dict(
                type='IoUNegPiecewiseSampler',
                num=128,
                pos_fraction=0.5,
                neg_piece_fractions=[0.8, 0.2],
                neg_iou_piece_thrs=[0.55, 0.1],
                neg_pos_ub=-1,
                add_gt_as_proposals=False,
                return_iou=True),
            cls_pos_thr=0.75,
            cls_neg_thr=0.25
        )
    )
)